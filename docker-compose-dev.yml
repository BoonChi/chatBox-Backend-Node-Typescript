version: '3.8'
services:
  postgres:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment: 
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_PORT=$POSTGRES_DOCKER_PORT
    ports:
    - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    volumes:
      - db:/data/db
  chatbox:
    depends_on:
      - postgres
    build:
      context: ./
      dockerfile: Dockerfile-dev
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
      - $SOCKET_LOCAL_PORT:$SOCKET_DOCKER_PORT
    environment:
      - NODE_PORT=$NODE_DOCKER_PORT
      - SOCKET_PORT=$SOCKET_DOCKER_PORT
      - DB_HOST=$POSTGRES_HOST
      - DB_USER=$POSTGRES_USER
      - DB_PASSWORD=$POSTGRES_PASSWORD
      - DB_NAME=$POSTGRES_DB
      - POSTGRES_PORT=$POSTGRES_DOCKER_PORT
      - SECRET_KEY=xobsecret123
      - EXPIRES_IN=2d
    stdin_open: true
    tty: true
    volumes:
      - ./:/usr/src/chatBoxNestJs
    links:
      - postgres

  # elasticSearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.1.0
  #   container_name: elasticsearch
  #   environment:
  #     - node.name=elasticsearch
  #     - cluster.name=docker-cluster
  #     - cluster.initial_master_nodes=elasticsearch
  #     - "ES_JAVA_OPTS=-Xms256M -Xmx256M"
  #     - http.cors.enabled=true
  #     - http.cors.allow-origin=*
  #     - network.host=_eth0_
  #   ulimits:
  #     nofile:
  #       soft: 65536
  #       hard: 65536
  #   ports:
  #     - 9200:9200
volumes:
  db:
